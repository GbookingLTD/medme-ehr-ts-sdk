openapi: 3.1.0
info:
  title: MedMe EHR RPCServer
  version: 1.9.492
  description: |
    ## Medme EHR API

    Medme EHR API для предоставления медицинских данных конечным пользователям в виде мобильного приложения, веб интерфейса или другим способом.

    Главная цель API для EHR — это унификация передачи мед. данных между клиентом и сервером.
servers:
  - url: http://localhost:9999
tags:
  - name: ApiInfo
    description: |
      Запросы для получения информации о сервере
  - name: Auth
    description: |
      Описывает подключение к серверу
  - name: Appointment
    description: |
      Записи на прием
paths:
  /#api_info.healthcheck:
    post:
      tags:
        - ApiInfo
      summary: Получение информации о поднятом сервере и БД
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/requests/ApiInfo/Healthcheck'
      responses:
        '200':
          content:
            application/json:
              description: Подключение к серверу
              schema:
                $ref: '#/components/responses/ApiInfo/Healthcheck'
  /#api_info.get_specializations_by_pattern:
    post:
      tags:
        - ApiInfo
      summary: Поиск специализации по её названию
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/requests/ApiInfo/GetSpecializationsByPattern'
  /#misc.get_attached_file:
    get:
      tags:
        - Misc
      summary: Запрос на скачивание присоединенного файла
      parameters:
        - in: query
          name: key
          schema:
            type: string
          required: true
          description: Unique file key
  /#appointment.get_appointment_by_id:
    post:
      tags:
        - Appointment
      summary: Получение записи на прием по идентификатору
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/requests/Appointment/GetAppointmentById'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Возвращает данные о записи в МИСе
                oneOf:
                  - $ref: '#/components/responses/Appointment/GetAppointmentById'
                    title: Success
                  - $ref: '#/components/errorResponses/UnknownError'
                    title: Unknown error
                  - $ref: '#/components/errorResponses/NotAuthorized'
                    title: Not authorized
                  - $ref: '#/components/errorResponses/AccessForbidden'
                    title: Access forbidden
  /#appointment.get_patient_appointments:
    post:
      tags:
        - Appointment
      summary: Получение записей пациента
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/requests/Appointment/GetPatientAppointments'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Возвращает данные о записях пациента в МИСе
                oneOf:
                  - $ref: '#/components/responses/Appointment/GetPatientAppointments'
                    title: Success
                  - $ref: '#/components/errorResponses/UnknownError'
                    title: Unknown error
                  - $ref: '#/components/errorResponses/NotAuthorized'
                    title: Not authorized
                  - $ref: '#/components/errorResponses/AccessForbidden'
                    title: Access forbidden
  /#appointment.get_appointments:
    post:
      tags:
        - Appointment
      summary: Получение всех записей
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/requests/Appointment/GetAppointments'
  /#appointment.count:
    post:
      tags:
        - Appointment
      summary: Получение количества записей
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/requests/Appointment/Count'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Возвращает количество записей в МИСе
                oneOf:
                  - $ref: '#/components/responses/Appointment/Count'
                    title: Success
                  - $ref: '#/components/errorResponses/UnknownError'
                    title: Unknown error
                  - $ref: '#/components/errorResponses/NotAuthorized'
                    title: Not authorized
                  - $ref: '#/components/errorResponses/AccessForbidden'
                    title: Access forbidden
  /#appointment.patient_appointments_count:
    post:
      tags:
        - Appointment
      summary: Получение количества записей по пациенту
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/requests/Appointment/PatientAppointmentCount'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Возвращает количество записей пациента в МИСе
                oneOf:
                  - $ref: '#/components/responses/Appointment/PatientAppointmentCount'
                    title: Success
                  - $ref: '#/components/errorResponses/UnknownError'
                    title: Unknown error
                  - $ref: '#/components/errorResponses/NotAuthorized'
                    title: Not authorized
                  - $ref: '#/components/errorResponses/AccessForbidden'
                    title: Access forbidden
components:
  Request:
    description: jsonrpc2 запрос
    properties:
      jsonrpc:
        description: версия протокола - 2.0
        type: string
        const: '2.0'
      id:
        description: значение числового типа для идентификации запроса на сервере
        type:
          - number
          - string
      cred:
        description: параметры авторизации
        oneOf:
          - type: object
            params: []
            required: []
            additionalProperties: false
          - type: object
            properties:
              user:
                description: идентификатор профиля пользователя
                type: string
              token:
                description: временный token для доступа
                type: string
            required:
              - user
              - token
            additionalProperties: false
      method:
        description: название jsonrpc метода
        type: string
      params:
        additionalProperties: true
        description: параметры запроса
        type: object
    required:
      - jsonrpc
      - id
      - method
      - params
    additionalProperties: false
  ErrorResponse:
    type: object
    properties:
      jsonrpc:
        description: версия протокола (2.0)
        type: string
        const: '2.0'
      id:
        description: значение числового типа для идентификации запроса на сервере
        type: number
      error:
        description: объект, содержащий информацию об ошибке
        type: object
        properties:
          code:
            description: код ошибки
            type: number
          message:
            description: текстовая информация об ошибке
            type: string
          data:
            description: дополнительные данные об ошибке
            type:
              - string
              - object
        required:
          - code
          - message
    required:
      - jsonrpc
      - id
      - error
    additionalProperties: false
  Response:
    type: object
    properties:
      jsonrpc:
        description: версия протокола (2.0)
        type: string
        const: '2.0'
      id:
        description: значение числового типа для идентификации запроса на сервере
        type: number
      result:
        description: данные, передаваемые в ответ
        type: object
    required:
      - jsonrpc
      - id
      - result
    additionalProperties: false
  errorResponses:
    NotAuthorized:
      allOf:
        - $ref: '#/components/ErrorResponse'
        - type: object
          properties:
            code:
              type: number
              description: код ошибки
              const: -33000
    UnknownError:
      allOf:
        - $ref: '#/components/ErrorResponse'
        - type: object
          properties:
            code:
              type: number
              description: код ошибки
              const: -32603
    AccessForbidden:
      allOf:
        - $ref: '#/components/ErrorResponse'
        - type: object
          properties:
            code:
              type: number
              description: код ошибки
              const: -33403
  requests:
    Appointment:
      GetAppointmentById:
        allOf:
          - $ref: '#/components/Request'
          - type: object
            required:
              - params
            properties:
              params:
                $ref: '#/components/schemas/IDRequest'
      GetPatientAppointments:
        allOf:
          - $ref: '#/components/Request'
          - type: object
            required:
              - params
            properties:
              params:
                $ref: '#/components/schemas/PatientIdAppointmentListRequest'
      PatientAppointmentCount:
        allOf:
          - $ref: '#/components/Request'
          - type: object
            required:
              - params
            properties:
              params:
                $ref: '#/components/schemas/PatientIdRequest'
      Count:
        allOf:
          - $ref: '#/components/Request'
          - type: object
            additionalProperties: false
            required:
              - params
            properties:
              params:
                type: object
                additionalProperties: false
      GetAppointments:
        allOf:
          - $ref: '#/components/Request'
          - type: object
            required:
              - params
            properties:
              params:
                $ref: '#/components/schemas/PatientIdAppointmentListRequest'
    ApiInfo:
      GetSpecializationsByPattern:
        allOf:
          - $ref: '#/components/Request'
          - type: object
            required:
              - paras
            properties:
              params:
                type: object
                additionalProperties: false
                required:
                  - text
                properties:
                  text:
                    type: string
                    description: Шаблон, по которому ищется специализация
      Healthcheck:
        allOf:
          - $ref: '#/components/Request'
          - type: object
            additionalProperties: false
            required:
              - params
            properties:
              params:
                type: object
                additionalProperties: false
  responses:
    ApiInfo:
      Healthcheck:
        allOf:
          - $ref: '#/components/Response'
          - type: object
            additionalProperties: false
            required:
              - result
            properties:
              result:
                $ref: '#/components/schemas/HealthCheckResponse'
    Appointment:
      GetAppointmentById:
        allOf:
          - $ref: '#/components/Response'
          - type: object
            additionalProperties: false
            required:
              - result
            properties:
              result:
                $ref: '#/components/schemas/AppointmentResponse'
      GetPatientAppointments:
        allOf:
          - $ref: '#/components/Response'
          - type: object
            additionalProperties: false
            required:
              - result
            properties:
              result:
                $ref: '#/components/schemas/AppointmentListResponse'
      Count:
        allOf:
          - $ref: '#/components/Response'
          - type: object
            additionalProperties: false
            required:
              - result
            properties:
              result:
                $ref: '#/components/schemas/CountResponse'
      PatientAppointmentCount:
        allOf:
          - $ref: '#/components/Response'
          - type: object
            additionalProperties: false
            required:
              - result
            properties:
              result:
                $ref: '#/components/schemas/CountResponse'
  schemas:
    Result:
      type: object
      additionalProperties: false
      properties:
        businessId:
          type: string
        status:
          type: boolean
    HealthCheckResponse:
      $schema: http://json-schema.org/draft-04/schema#
      title: HealthCheckResponse
      type: object
      additionalProperties: false
      properties:
        version:
          type: string
        serverHealthy:
          type: boolean
          description: Summarize all healthy flags
        embeddedStorageHealthy:
          type: boolean
          description: Returns connection status to the embedded db
        providerHealthy:
          type: boolean
          description: Returns true when provider connected to data source; overwise it returns false
        aggregatedHealthy:
          type: array
          description: When RPC server setting up as aggregation server It return status of each provider
          items:
            $ref: '#/components/schemas/Result'
      definitions:
        Result:
          type: object
          additionalProperties: false
          properties:
            businessId:
              type: string
            status:
              type: boolean
    RpcRequestPayload:
      type: object
      additionalProperties: false
    IDRequest:
      $schema: http://json-schema.org/draft-04/schema#
      title: IDRequest
      definitions:
        RpcRequestPayload:
          type: object
          additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/RpcRequestPayload'
        - type: object
          additionalProperties: false
          required:
            - id
          properties:
            id:
              type: string
            needRecognition:
              type: boolean
    BusinessInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        active:
          type: boolean
        name:
          type: string
        location:
          type: string
        filialId:
          type: string
        networkId:
          type: string
        networkFilialKey:
          type: string
    Specialization:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    Doctor:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        surname:
          type: string
        name:
          type: string
        specialization:
          $ref: '#/components/schemas/Specialization'
        specializations:
          type: array
          items:
            $ref: '#/components/schemas/Specialization'
    Currency:
      type: integer
      description: ''
      x-enumNames:
        - Rur
        - Usd
      enum:
        - 0
        - 1
      x-enumDescriptions:
        '0': Rur
        '1': Usd
    DiscountType:
      type: integer
      description: ''
      x-enumNames:
        - Percent
        - Absolute
      enum:
        - 0
        - 1
      x-enumDescriptions:
        '0': Percent
        '1': Absolute
    Discount:
      type: object
      additionalProperties: false
      properties:
        discountType:
          $ref: '#/components/schemas/DiscountType'
        discountPercent:
          type: integer
        discountValue:
          type: number
          format: double
    ClientPrice:
      type: object
      additionalProperties: false
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        originValue:
          type: number
          format: double
        discountValue:
          type: number
          format: double
        value:
          type: number
          format: double
        discount:
          $ref: '#/components/schemas/Discount'
    Service:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        price:
          $ref: '#/components/schemas/ClientPrice'
        duration:
          type: integer
    AppointmentConfirmationStatus:
      type: integer
      description: ''
      x-enumNames:
        - Tentative
        - ConfirmedByClient
        - ConfirmedByBusiness
        - CancelledByClient
        - CancelledByBusiness
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      x-enumDescriptions:
        '0': Tentative
        '1': ConfirmedByClient
        '2': ConfirmedByBusiness
        '3': CancelledByClient
        '4': CancelledByBusiness
    Gender:
      type: integer
      description: ''
      x-enumNames:
        - Male
        - Female
        - Other
        - Unknown
      enum:
        - 0
        - 1
        - 2
        - 3
      x-enumDescriptions:
        '0': Male
        '1': Female
        '2': Other
        '3': Unknown
    PatientInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        surname:
          type: string
        middleName:
          type: string
        name:
          type: string
        phones:
          type: array
          items:
            type: string
        email:
          type: string
        gender:
          $ref: '#/components/schemas/Gender'
        birthdate:
          type: string
          format: date-time
        medcardNumber:
          type: string
        descriptionText:
          type: string
    AppointmentSource:
      type: integer
      description: ''
      x-enumNames:
        - MobileClinicWebsite
        - DesktopClinicWebsite
        - MobileClinicApp
        - YaMap
        - Allianz
        - NaPopravku
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
      x-enumDescriptions:
        '0': MobileClinicWebsite
        '1': DesktopClinicWebsite
        '2': MobileClinicApp
        '3': YaMap
        '4': Allianz
        '5': NaPopravku
    Exception:
      type: object
      additionalProperties: false
      properties:
        Message:
          type: string
        InnerException:
          oneOf:
            - type: null
            - $ref: '#/components/schemas/Exception'
        Source:
          type:
            - null
            - string
        StackTrace:
          type:
            - null
            - string
    PropertiesMismatch:
      allOf:
        - $ref: '#/components/schemas/Exception'
        - type: object
          additionalProperties: false
          properties:
            a: {}
            b: {}
            name:
              type: string
    AppointmentMessage:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        isActive:
          type: boolean
        business:
          $ref: '#/components/schemas/BusinessInfo'
        created:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        doctor:
          $ref: '#/components/schemas/Doctor'
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
        duration:
          type: integer
        status:
          $ref: '#/components/schemas/AppointmentConfirmationStatus'
        clientAppear:
          type: boolean
        patientId:
          type: string
        patient:
          $ref: '#/components/schemas/PatientInfo'
        resultId:
          type: string
        clientPrice:
          $ref: '#/components/schemas/ClientPrice'
        source:
          $ref: '#/components/schemas/AppointmentSource'
        comment:
          type: string
        lastPropertiesMismatch:
          $ref: '#/components/schemas/PropertiesMismatch'
    RecognitionResultInfo:
      type: object
      additionalProperties: false
      properties:
        ruleName:
          type: string
        numberOfMatches:
          type: integer
          format: int32
    AppointmentResponse:
      $schema: http://json-schema.org/draft-04/schema#
      title: AppointmentResponse
      type: object
      additionalProperties: false
      properties:
        appointment:
          description: Appointment data
          oneOf:
            - $ref: '#/components/schemas/AppointmentMessage'
        validationErrors:
          type: array
          description: Validation errors
          items:
            type: string
        recognitionResults:
          type: array
          description: Information about recognition engine work results
          items:
            $ref: '#/components/schemas/RecognitionResultInfo'
      definitions:
        AppointmentMessage:
          type: object
          additionalProperties: false
          properties:
            id:
              type: string
            isActive:
              type: boolean
            business:
              $ref: '#/components/schemas/BusinessInfo'
            created:
              type: string
              format: date-time
            start:
              type: string
              format: date-time
            doctor:
              $ref: '#/components/schemas/Doctor'
            services:
              type: array
              items:
                $ref: '#/components/schemas/Service'
            duration:
              type: integer
            status:
              $ref: '#/components/schemas/AppointmentConfirmationStatus'
            clientAppear:
              type: boolean
            patientId:
              type: string
            patient:
              $ref: '#/components/schemas/PatientInfo'
            resultId:
              type: string
            clientPrice:
              $ref: '#/components/schemas/ClientPrice'
            source:
              $ref: '#/components/schemas/AppointmentSource'
            comment:
              type: string
            lastPropertiesMismatch:
              $ref: '#/components/schemas/PropertiesMismatch'
        BusinessInfo:
          type: object
          additionalProperties: false
          properties:
            id:
              type: string
            active:
              type: boolean
            name:
              type: string
            location:
              type: string
            filialId:
              type: string
            networkId:
              type: string
            networkFilialKey:
              type: string
        Doctor:
          type: object
          additionalProperties: false
          properties:
            id:
              type: string
            surname:
              type: string
            name:
              type: string
            specialization:
              $ref: '#/components/schemas/Specialization'
            specializations:
              type: array
              items:
                $ref: '#/components/schemas/Specialization'
        Specialization:
          type: object
          additionalProperties: false
          properties:
            id:
              type: string
            name:
              type: string
        Service:
          type: object
          additionalProperties: false
          properties:
            id:
              type: string
            name:
              type: string
            price:
              $ref: '#/components/schemas/ClientPrice'
            duration:
              type: integer
        ClientPrice:
          type: object
          additionalProperties: false
          properties:
            currency:
              $ref: '#/components/schemas/Currency'
            originValue:
              type: number
              format: double
            discountValue:
              type: number
              format: double
            value:
              type: number
              format: double
            discount:
              $ref: '#/components/schemas/Discount'
        Currency:
          type: integer
          description: ''
          x-enumNames:
            - Rur
            - Usd
          enum:
            - 0
            - 1
          x-enumDescriptions:
            '0': Rur
            '1': Usd
        Discount:
          type: object
          additionalProperties: false
          properties:
            discountType:
              $ref: '#/components/schemas/DiscountType'
            discountPercent:
              type: integer
            discountValue:
              type: number
              format: double
        DiscountType:
          type: integer
          description: ''
          x-enumNames:
            - Percent
            - Absolute
          enum:
            - 0
            - 1
          x-enumDescriptions:
            '0': Percent
            '1': Absolute
        AppointmentConfirmationStatus:
          type: integer
          description: ''
          x-enumNames:
            - Tentative
            - ConfirmedByClient
            - ConfirmedByBusiness
            - CancelledByClient
            - CancelledByBusiness
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          x-enumDescriptions:
            '0': Tentative
            '1': ConfirmedByClient
            '2': ConfirmedByBusiness
            '3': CancelledByClient
            '4': CancelledByBusiness
        PatientInfo:
          type: object
          additionalProperties: false
          properties:
            id:
              type: string
            surname:
              type: string
            middleName:
              type: string
            name:
              type: string
            phones:
              type: array
              items:
                type: string
            email:
              type: string
            gender:
              $ref: '#/components/schemas/Gender'
            birthdate:
              type: string
              format: date-time
            medcardNumber:
              type: string
            descriptionText:
              type: string
        Gender:
          type: integer
          description: ''
          x-enumNames:
            - Male
            - Female
            - Other
            - Unknown
          enum:
            - 0
            - 1
            - 2
            - 3
          x-enumDescriptions:
            '0': Male
            '1': Female
            '2': Other
            '3': Unknown
        AppointmentSource:
          type: integer
          description: ''
          x-enumNames:
            - MobileClinicWebsite
            - DesktopClinicWebsite
            - MobileClinicApp
            - YaMap
            - Allianz
            - NaPopravku
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
          x-enumDescriptions:
            '0': MobileClinicWebsite
            '1': DesktopClinicWebsite
            '2': MobileClinicApp
            '3': YaMap
            '4': Allianz
            '5': NaPopravku
        PropertiesMismatch:
          allOf:
            - $ref: '#/components/schemas/Exception'
            - type: object
              additionalProperties: false
              properties:
                a: {}
                b: {}
                name:
                  type: string
        Exception:
          type: object
          additionalProperties: false
          properties:
            Message:
              type: string
            InnerException:
              oneOf:
                - type: null
                - $ref: '#/components/schemas/Exception'
            Source:
              type:
                - null
                - string
            StackTrace:
              type:
                - null
                - string
        RecognitionResultInfo:
          type: object
          additionalProperties: false
          properties:
            ruleName:
              type: string
            numberOfMatches:
              type: integer
              format: int32
    PatientIdAppointmentListRequest:
      $schema: http://json-schema.org/draft-04/schema#
      title: PatientIdAppointmentListRequest
      definitions:
        RpcRequestPayload:
          type: object
          additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/RpcRequestPayload'
        - type: object
          additionalProperties: false
          required:
            - patientId
            - limit
            - offset
          properties:
            patientId:
              type: string
            limit:
              type: integer
              format: int32
            offset:
              type: integer
              format: int32
            orderByDescendingDate:
              type: boolean
            needRecognition:
              type: boolean
    definitions-Exception:
      type: object
      additionalProperties: false
      properties:
        Message:
          type: string
        InnerException:
          oneOf:
            - type: null
            - $ref: '#/components/schemas/definitions-Exception'
        Source:
          type:
            - null
            - string
        StackTrace:
          type:
            - null
            - string
    definitions-PropertiesMismatch:
      allOf:
        - $ref: '#/components/schemas/definitions-Exception'
        - type: object
          additionalProperties: false
          properties:
            a: {}
            b: {}
            name:
              type: string
    definitions-AppointmentMessage:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        isActive:
          type: boolean
        business:
          $ref: '#/components/schemas/BusinessInfo'
        created:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        doctor:
          $ref: '#/components/schemas/Doctor'
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
        duration:
          type: integer
        status:
          $ref: '#/components/schemas/AppointmentConfirmationStatus'
        clientAppear:
          type: boolean
        patientId:
          type: string
        patient:
          $ref: '#/components/schemas/PatientInfo'
        resultId:
          type: string
        clientPrice:
          $ref: '#/components/schemas/ClientPrice'
        source:
          $ref: '#/components/schemas/AppointmentSource'
        comment:
          type: string
        lastPropertiesMismatch:
          $ref: '#/components/schemas/definitions-PropertiesMismatch'
    AppointmentListResponse:
      $schema: http://json-schema.org/draft-04/schema#
      title: AppointmentListResponse
      type: object
      additionalProperties: false
      properties:
        appointments:
          type: array
          description: List of appointments
          items:
            $ref: '#/components/schemas/definitions-AppointmentMessage'
        validationErrors:
          type: array
          description: Validation errors. i-th item matches with i-th element of Appointment array.
          items:
            type: array
            items:
              type: string
        recognitionResults:
          type: array
          description: Information about recognition engine work results. Item of this array by i-th index contains recognition results of i-th element of the Appointments array
          items:
            type: array
            items:
              $ref: '#/components/schemas/RecognitionResultInfo'
      definitions:
        AppointmentMessage:
          type: object
          additionalProperties: false
          properties:
            id:
              type: string
            isActive:
              type: boolean
            business:
              $ref: '#/components/schemas/BusinessInfo'
            created:
              type: string
              format: date-time
            start:
              type: string
              format: date-time
            doctor:
              $ref: '#/components/schemas/Doctor'
            services:
              type: array
              items:
                $ref: '#/components/schemas/Service'
            duration:
              type: integer
            status:
              $ref: '#/components/schemas/AppointmentConfirmationStatus'
            clientAppear:
              type: boolean
            patientId:
              type: string
            patient:
              $ref: '#/components/schemas/PatientInfo'
            resultId:
              type: string
            clientPrice:
              $ref: '#/components/schemas/ClientPrice'
            source:
              $ref: '#/components/schemas/AppointmentSource'
            comment:
              type: string
            lastPropertiesMismatch:
              $ref: '#/components/schemas/definitions-PropertiesMismatch'
        BusinessInfo:
          type: object
          additionalProperties: false
          properties:
            id:
              type: string
            active:
              type: boolean
            name:
              type: string
            location:
              type: string
            filialId:
              type: string
            networkId:
              type: string
            networkFilialKey:
              type: string
        Doctor:
          type: object
          additionalProperties: false
          properties:
            id:
              type: string
            surname:
              type: string
            name:
              type: string
            specialization:
              $ref: '#/components/schemas/Specialization'
            specializations:
              type: array
              items:
                $ref: '#/components/schemas/Specialization'
        Specialization:
          type: object
          additionalProperties: false
          properties:
            id:
              type: string
            name:
              type: string
        Service:
          type: object
          additionalProperties: false
          properties:
            id:
              type: string
            name:
              type: string
            price:
              $ref: '#/components/schemas/ClientPrice'
            duration:
              type: integer
        ClientPrice:
          type: object
          additionalProperties: false
          properties:
            currency:
              $ref: '#/components/schemas/Currency'
            originValue:
              type: number
              format: double
            discountValue:
              type: number
              format: double
            value:
              type: number
              format: double
            discount:
              $ref: '#/components/schemas/Discount'
        Currency:
          type: integer
          description: ''
          x-enumNames:
            - Rur
            - Usd
          enum:
            - 0
            - 1
          x-enumDescriptions:
            '0': Rur
            '1': Usd
        Discount:
          type: object
          additionalProperties: false
          properties:
            discountType:
              $ref: '#/components/schemas/DiscountType'
            discountPercent:
              type: integer
            discountValue:
              type: number
              format: double
        DiscountType:
          type: integer
          description: ''
          x-enumNames:
            - Percent
            - Absolute
          enum:
            - 0
            - 1
          x-enumDescriptions:
            '0': Percent
            '1': Absolute
        AppointmentConfirmationStatus:
          type: integer
          description: ''
          x-enumNames:
            - Tentative
            - ConfirmedByClient
            - ConfirmedByBusiness
            - CancelledByClient
            - CancelledByBusiness
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          x-enumDescriptions:
            '0': Tentative
            '1': ConfirmedByClient
            '2': ConfirmedByBusiness
            '3': CancelledByClient
            '4': CancelledByBusiness
        PatientInfo:
          type: object
          additionalProperties: false
          properties:
            id:
              type: string
            surname:
              type: string
            middleName:
              type: string
            name:
              type: string
            phones:
              type: array
              items:
                type: string
            email:
              type: string
            gender:
              $ref: '#/components/schemas/Gender'
            birthdate:
              type: string
              format: date-time
            medcardNumber:
              type: string
            descriptionText:
              type: string
        Gender:
          type: integer
          description: ''
          x-enumNames:
            - Male
            - Female
            - Other
            - Unknown
          enum:
            - 0
            - 1
            - 2
            - 3
          x-enumDescriptions:
            '0': Male
            '1': Female
            '2': Other
            '3': Unknown
        AppointmentSource:
          type: integer
          description: ''
          x-enumNames:
            - MobileClinicWebsite
            - DesktopClinicWebsite
            - MobileClinicApp
            - YaMap
            - Allianz
            - NaPopravku
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
          x-enumDescriptions:
            '0': MobileClinicWebsite
            '1': DesktopClinicWebsite
            '2': MobileClinicApp
            '3': YaMap
            '4': Allianz
            '5': NaPopravku
        PropertiesMismatch:
          allOf:
            - $ref: '#/components/schemas/definitions-Exception'
            - type: object
              additionalProperties: false
              properties:
                a: {}
                b: {}
                name:
                  type: string
        Exception:
          type: object
          additionalProperties: false
          properties:
            Message:
              type: string
            InnerException:
              oneOf:
                - type: null
                - $ref: '#/components/schemas/definitions-Exception'
            Source:
              type:
                - null
                - string
            StackTrace:
              type:
                - null
                - string
        RecognitionResultInfo:
          type: object
          additionalProperties: false
          properties:
            ruleName:
              type: string
            numberOfMatches:
              type: integer
              format: int32
    PageCursorType:
      type: integer
      description: ''
      x-enumNames:
        - None
        - GtId
        - LimitOffset
        - GtDate
      enum:
        - 0
        - 1
        - 2
        - 3
      x-enumDescriptions:
        '0': None
        '1': GtId
        '2': LimitOffset
        '3': GtDate
    CountResponse:
      $schema: http://json-schema.org/draft-04/schema#
      title: CountResponse
      type: object
      additionalProperties: false
      properties:
        count:
          type: integer
          description: Items count or 0 when this "count" request isn't supported
          format: int32
        support:
          type: boolean
          description: Returns true when the API supports this "count" request
        cursorType:
          description: Cursor type for clients pagination
          oneOf:
            - $ref: '#/components/schemas/PageCursorType'
      definitions:
        PageCursorType:
          type: integer
          description: ''
          x-enumNames:
            - None
            - GtId
            - LimitOffset
            - GtDate
          enum:
            - 0
            - 1
            - 2
            - 3
          x-enumDescriptions:
            '0': None
            '1': GtId
            '2': LimitOffset
            '3': GtDate
    PatientIdRequest:
      $schema: http://json-schema.org/draft-04/schema#
      title: PatientIdRequest
      definitions:
        RpcRequestPayload:
          type: object
          additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/RpcRequestPayload'
        - type: object
          additionalProperties: false
          required:
            - patientId
          properties:
            patientId:
              type: string
